version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend
  kafka:
    image: wurstmeister/kafka
    container_name: kafka

    restart: on-failure

    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "producttopic:1:1"
      KAFKA_ALLOW_ANONYMOUS_LOGIN: yes
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://kafka:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093

    depends_on:
      - zookeeper
    networks:
      - backend
  mongo:
    image: mongo:5.0.14
    container_name: 'mongo-db-kafka-sample'
    ports:
      - "27017:27017"
    networks:
      - backend
  api:
    build:
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mongo
      - kafka
    networks:
      - backend
networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: 172.10.1.0/16